spring.application.name=repeater-console
server.port=80
mybatis.type-aliases-package=org.tony.console.db.model
mybatis.mapper-locations=classpath*:mybatis/*Mapper.xml

#	数据库url
spring.datasource.url=jdbc:mysql://${db.url}:3306/${db.name}?allowMultiQueries=true
#	数据库用户名
spring.datasource.username=${db.user}
#	数据库密码
spring.datasource.password=${db.password}
#	数据库驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#默认true
spring.datasource.hikari.autoCommit=true
#等待超时时间，默认30秒
spring.datasource.hikari.connectionTimeOut=30000
#最长多久空闲即释放，默认10分钟
spring.datasource.hikari.idleTimeout=600000
#连接最长存活时间毫秒，默认30分钟
spring.datasource.hikari.maxLifetime=1800000
#最大连接池数量，默认10
spring.datasource.hikari.maximumPoolSize=30
#默认和max相同
spring.datasource.hikari.minimumIdle=5
#连接池名称，如果多个微服务，建议配置不同名字
spring.datasource.hikari.poolName=hikari
#开启JMX
spring.datasource.hikari.registerMbeans=true

# 使用本地数据源进行测试
console.use.localCache =false
# 示例回放地址（工程使用需要维护repeater插件的ip:port替换，指定ip发起回放）
repeat.repeat.url=http://%s:%s/sandbox/default/module/http/repeater/repeat
# 示例配置地址（工程使用需要维护repeater插件的ip:port替换，指定ip发起回放）
repeat.config.url=http://%s:%s/sandbox/default/module/http/repeater/pushConfig
# 示例重载地址（工程使用需要维护repeater插件的ip:port替换，指定ip发起回放）
repeat.reload.url=http://%s:%s/sandbox/default/module/http/repeater/reload
repeat.dynamic.reload.url=http://%s:%s/sandbox/default/module/http/repeater/reloadDynamic
repeat.static.reload.url=http://%s:%s/sandbox/default/module/http/repeater/reloadStatic
repeat.groovy.reload.url=http://%s:%s/sandbox/default/module/http/repeater/reloadGroovy?id=%s

spring.thymeleaf.suffix=.html
spring.thymeleaf.content-type=text/html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix=classpath:/templates/

# 开发时关闭缓存
spring.thymeleaf.cache=true

#参数调优
server.tomcat.max-connections=8192
server.tomcat.accept-count=100
server.tomcat.threads.max=200

kafka.topic.record=repeator_topic
kafka.topic.replay=repeator_repeat_topic

apollo.bootstrap.enabled=true
apollo.bootstrap.eagerLoad.enabled=true
apollo.bootstrap.namespaces=application

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.serialization.FAIL_ON_SELF_REFERENCES=false
spring.jackson.parser.allow-missing-values=true


db.url=mysql-dev.com
db.name=
db.user=root
db.password=root

kafka.user=feiTjL4l1Dif
kafka.password=TPdL4aPOnk3O
spring.kafka.bootstrap-servers=common-kafka-test.com:39094
spring.kafka.consumer.group-id=repeater-group
spring.kafka.properties.security.protocol=SASL_PLAINTEXT
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${kafka.user}" password="${kafka.password}";
kafka.task.server = common-kafka-test.com:39094
kafka.task.topic = repeator_task_topic
kafka.record.topic = repeator_recommendation_topic
kafka.task.username = root
kafka.task.password = root
task.sync.limit = 500


replay.dataSource.url=http://127.0.0.1/api/v1/testCase/replay?caseId=

spring.redis.host=127.0.0.1
spring.redis.password=password
spring.redis.database=5
spring.redis.port=6379

# mongo
spring.data.mongodb.uri=mongodb://repeator_platform_test_rw:Ma89Hk6gElBW9P5Gqy3@127.0.0.1:27017/?authSource=admin
spring.data.mongodb.database=repeator_platform

# ??????kafka
kafka.task.enable=true

# 回放任务的topic
redis.task.prefix = repeater_task_
redis.task.timeout = 86400
task.item.run.batch.size = 100
repeater.module.max.ideal.time = 1
record.idle.day = 4
record.idle.clean.bath.size = 200


sso.url = https://signin-test.nio.com
app.client.id = 101287
app.client.secret = 250c7Ffde810D758dDb790eF4dA03F94
biz.config.superUserList = xiuzhu
plugin.name.list = {\n"http": "http Servlet",\n"java-entrance": "java主调用",\n"java-subInvoke": "java子调用",\n"java-date": "Date mock",\n"mybatis": "mybatis",\n"feign-default": "feign",\n"okhttp":"okhttp",\n"spring-redis-template":"springRedis",\n"spring-async": "springAsync",\n"spring-cache": "springCache",\n"apache-http-client":"apacheHttp",\n"spring-data":"springData",\n"http-react":"httpReact",\n"spring-data-react":"springDataReact"\n}
app.static.expire.day = 7
feishu.template.task.report = {\n  "config": {\n    "wide_screen_mode": true\n  },\n  "elements": [\n    {\n      "tag": "markdown",\n      "content": "【部署信息】\n实例：#{[instName]}\n操作人: #{[opUser]}\n分支: #{[branch]}\ncommit: [#{[commitTitle]}](#{[commitUrl]})\n【自动化信息】\n用例执行总数：\n成功个数：<font color='green'>#{[total]}</font>\n失败个数：<font color='red'>#{[fail]}</font>\n成功率：#{[rate]}\n"\n    },\n    {\n      "tag": "action",\n      "actions": [\n        {\n          "tag": "button",\n          "text": {\n            "tag": "plain_text",\n            "content": "点击查看详情"\n          },\n          "type": "primary",\n          "multi_url": {\n            "url": "#{[taskUrl]}",\n            "pc_url": "",\n            "android_url": "",\n            "ios_url": ""\n          }\n        }\n      ]\n    }\n  ],\n  "header": {\n    "template": "green",\n    "title": {\n      "content": "#{[appName]} 部署自动回归测试报告",\n      "tag": "plain_text"\n    }\n  }\n}
task.delay.deploy = 2
